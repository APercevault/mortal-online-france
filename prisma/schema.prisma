generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String        @id @default(cuid())
  name      String?
  guilds    GuildAdmin[]
  votes     GuildVote[]
  comments  GuildComment[]
  videos    GuildVideo[]
  createdAt DateTime      @default(now())
}

model Guild {
  id          String         @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime       @default(now())
  admins      GuildAdmin[]
  votes       GuildVote[]
  comments    GuildComment[]
  videos      GuildVideo[]
}

model GuildAdmin {
  id        String   @id @default(cuid())
  userId    String
  guildId   String
  user      User     @relation(fields: [userId], references: [id])
  guild     Guild    @relation(fields: [guildId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, guildId])
}

model GuildVote {
  id        String   @id @default(cuid())
  userId    String
  guildId   String
  value     Int
  user      User     @relation(fields: [userId], references: [id])
  guild     Guild    @relation(fields: [guildId], references: [id])
  createdAt DateTime @default(now())

  @@unique([userId, guildId])
}

model GuildComment {
  id        String   @id @default(cuid())
  userId    String
  guildId   String
  content   String
  user      User     @relation(fields: [userId], references: [id])
  guild     Guild    @relation(fields: [guildId], references: [id])
  createdAt DateTime @default(now())
}

model GuildVideo {
  id        String   @id @default(cuid())
  userId    String
  guildId   String
  url       String
  user      User     @relation(fields: [userId], references: [id])
  guild     Guild    @relation(fields: [guildId], references: [id])
  createdAt DateTime @default(now())
}
